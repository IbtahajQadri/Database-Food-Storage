stages:
  - test
  - release

image: python:latest

before_script:
  - python -m pip install --upgrade pip
  - pip install -r requirements.txt

test-job:
  stage: test
  script:
    - echo "Applying Migrations."
    - python manage.py migrate
    - echo "Running tests."
    - python manage.py test


release-docker:
  stage: release
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" |
        docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  script:
    - echo "Building docker image"
    - docker build --pull -t $CI_REGISTRY_IMAGE .
    - echo "Pushing Docker image to registry"
    - docker push $CI_REGISTRY_IMAGE
  rules:
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main")'
  - if: '$CI_COMMIT_BRANCH == "develop"'
  - if: '$CI_COMMIT_BRANCH == "main"'